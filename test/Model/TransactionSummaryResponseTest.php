<?php
/**
 * TransactionSummaryResponseTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  macropage\SDKs\ebay\rest\finance
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * eBay Finances API
 *
 * This API is used to retrieve seller payouts and monetary transaction details related to those payouts.
 *
 * The version of the OpenAPI document: 1.9.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace macropage\SDKs\ebay\rest\finance\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * TransactionSummaryResponseTest Class Doc Comment
 *
 * @category    Class
 * @description This type is the base response type of the &lt;strong&gt;getTransactionSummary&lt;/strong&gt; method, and based on the filters that are used in the &lt;strong&gt;getTransactionSummary&lt;/strong&gt; call URI, the response may include  total count and amount of the seller&#39;s sales and credits, total count and amount of buyer refunds, and total count and amount of seller payment holds.
 * @package     macropage\SDKs\ebay\rest\finance
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class TransactionSummaryResponseTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "TransactionSummaryResponse"
     */
    public function testTransactionSummaryResponse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adjustmentAmount"
     */
    public function testPropertyAdjustmentAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adjustmentBookingEntry"
     */
    public function testPropertyAdjustmentBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adjustmentCount"
     */
    public function testPropertyAdjustmentCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "balanceTransferAmount"
     */
    public function testPropertyBalanceTransferAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "balanceTransferBookingEntry"
     */
    public function testPropertyBalanceTransferBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "balanceTransferCount"
     */
    public function testPropertyBalanceTransferCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "creditAmount"
     */
    public function testPropertyCreditAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "creditBookingEntry"
     */
    public function testPropertyCreditBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "creditCount"
     */
    public function testPropertyCreditCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disputeAmount"
     */
    public function testPropertyDisputeAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disputeBookingEntry"
     */
    public function testPropertyDisputeBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disputeCount"
     */
    public function testPropertyDisputeCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "nonSaleChargeAmount"
     */
    public function testPropertyNonSaleChargeAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "nonSaleChargeBookingEntry"
     */
    public function testPropertyNonSaleChargeBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "nonSaleChargeCount"
     */
    public function testPropertyNonSaleChargeCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "onHoldAmount"
     */
    public function testPropertyOnHoldAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "onHoldBookingEntry"
     */
    public function testPropertyOnHoldBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "onHoldCount"
     */
    public function testPropertyOnHoldCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "refundAmount"
     */
    public function testPropertyRefundAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "refundBookingEntry"
     */
    public function testPropertyRefundBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "refundCount"
     */
    public function testPropertyRefundCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shippingLabelAmount"
     */
    public function testPropertyShippingLabelAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shippingLabelBookingEntry"
     */
    public function testPropertyShippingLabelBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shippingLabelCount"
     */
    public function testPropertyShippingLabelCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transferAmount"
     */
    public function testPropertyTransferAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transferBookingEntry"
     */
    public function testPropertyTransferBookingEntry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transferCount"
     */
    public function testPropertyTransferCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
